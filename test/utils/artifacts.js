const getContract = (contractName) => artifacts.require(contractName);

module.exports = {
  Kernel: getContract('@aragon/os/Kernel'),
  ACL: getContract('@aragon/os/ACL'),
  EVMScriptRegistryFactory: getContract('@aragon/os/EVMScriptRegistryFactory'),
  EVMScriptExecutorMock: getContract('EVMScriptExecutorMock'),
  DAOFactory: getContract('@aragon/os/DAOFactory'),
  EVMScriptRegistry: getContract('@aragon/os/EVMScriptRegistry'),
  ConsumerEURxbVault: getContract('ConsumerEURxbVault'),
  InstitutionalEURxbVault: getContract('InstitutionalEURxbVault'),
  HiveVault: getContract('HiveVault'),
  SushiVault: getContract('SushiVault'),
  CVXVault: getContract('CVXVault'),
  CvxCrvVault: getContract('CvxCrvVault'),
  InstitutionalEURxbStrategy: getContract('InstitutionalEURxbStrategy'),
  ConsumerEURxbStrategy: getContract('ConsumerEURxbStrategy'),
  HiveStrategy: getContract('HiveStrategy'),
  SushiStrategy: getContract('SushiStrategy'),
  CVXStrategy: getContract('CVXStrategy'),
  CvxCrvStrategy: getContract('CvxCrvStrategy'),
  Voting: getContract('Voting'),
  VotingStakingRewards: getContract('VotingStakingRewards'),
  UnwrappedToWrappedTokenConverter: getContract('UnwrappedToWrappedTokenConverter'),
  WrappedToUnwrappedTokenConverter: getContract('WrappedToUnwrappedTokenConverter'),
  IERC20: getContract('IERC20'),
  IUniswapV2Router02: getContract('IUniswapV2Router02'),
  IUniswapV2Factory: getContract('IUniswapV2Factory'),
  IUniswapV2Pair: getContract('IUniswapV2Pair'),
  IController: getContract('IController'),
  IVaultCore: getContract('IVaultCore'),
  IStrategy: getContract('IStrategy'),
  IVaultWrapped: getContract('IVaultWrapped'),
  IVaultDelegated: getContract('IVaultDelegated'),
  IConverter: getContract('IConverter'),
  MockContract: getContract('MockContract'),
  MockToken: getContract('MockToken'),
  VeXBE: getContract('VeXBE'),
  StakingRewards: getContract('StakingRewards'),
  BonusCampaign: getContract('BonusCampaign'),
  ReferralProgram: getContract('ReferralProgram'),
  Treasury: getContract('Treasury'),
  TokenWrapper: getContract('TokenWrapper'),
  Registry: getContract('Registry'),
  Controller: getContract('Controller'),
  WETH9: getContract('WETH9'),
  LockSubscription: getContract('LockSubscription'),
  SimpleXBEInflation: getContract('SimpleXBEInflation'),
};
